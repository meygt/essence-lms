version: '3.8'

services:
  backend:
    image: essenceqa/lms-backend:latest
    container_name: lms-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - SQUARE_APPLICATION_ID=${SQUARE_APPLICATION_ID}
      - SQUARE_LOCATION_ID=${SQUARE_LOCATION_ID}
      - SQUARE_ENVIRONMENT=${SQUARE_ENVIRONMENT}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - lms-network

  client:
    image: essenceqa/lms-client-side:latest
    container_name: lms-client
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_ADMIN_URL=${NEXT_PUBLIC_ADMIN_URL}
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - lms-network

  admin:
    image: essenceqa/lms-admin-panel:latest
    container_name: lms-admin
    ports:
      - "5173:80"
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_CLIENT_URL=${VITE_CLIENT_URL}
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - lms-network

  redis:
    image: redis:7-alpine
    container_name: lms-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - lms-network

volumes:
  redis_data:

networks:
  lms-network:
    driver: bridge